% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/images.R
\name{render_svg}
\alias{render_svg}
\title{Render ggplot2 objects as in-line SVG}
\usage{
render_svg(
  plot,
  width,
  height,
  units = "mm",
  alt_title = NULL,
  alt_desc = NULL,
  caption = NULL
)
}
\arguments{
\item{plot}{A \code{\link[ggplot2:ggplot]{ggplot2::ggplot()}} object}

\item{width}{The desired width of the object}

\item{height}{The desired height of the object}

\item{units}{The units of width and height, default is mm}

\item{alt_title}{Short alt text (will show as tool-tip)}

\item{alt_desc}{Longer alt text (embedded within SVG)}

\item{caption}{A caption to display to all users, can also be set to
\code{"alt_title"} or \code{"alt_desc"} to match their value}
}
\description{
\code{render_svg()} converts ggplot2 objects to SVG code to render them as in-line
SVG code, and provides options for providing ARIA labels for assistive
technologies.
}
\details{
When rendering to HTML, Rmarkdown will render plots as \verb{<img>} tags,
including when the output device is set to svg or svglite. This is
problematic for accessibility reasons, as while scalable the plot continues
to be rendered by the browser as an image meaning that any text within the
plot is not selectable by the user and cannot be read by a screen reader.

\code{render_svg()} uses \code{\link[ggplot2:ggsave]{ggplot2::ggsave()}} to convert the plot to an chunk of
SVG code, rendering text as words (via the \code{\link[svglite:svglite]{svglite::svglite()}} device) and
returning that code rather than producing a plot. If the \code{alt_title},
\code{alt_desc} are used then these will embedded within the SVG code,
these are encoded as ARIA labels for the SVG chunk and \code{alt_title} will also
present as a tooltip. Optionally, a caption can be provided which will be
inserted below the plot, if the \code{caption} argument is set as \code{alt_title} or
\code{alt_desc} then it will take the value of that argument.
}
